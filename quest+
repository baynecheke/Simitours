<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1.0"/>
<title>Simitaur Adventure ‚Äî Container UI</title>
<style>
  body {margin:0; background:#0e1610; color:white; font-family:sans-serif; overflow:hidden;}
  canvas {display:block;}

  /* UI Overlay */
  #ui {
    position:fixed; top:0; left:0; width:100%; height:100%;
    pointer-events:none; /* disables background clicks */
  }
  .coins {
    position:absolute; top:10px; left:10px; background:#16261a; padding:6px 12px;
    border-radius:10px;
    pointer-events:auto; /* clickable */
  }
  .menu-buttons {
    position:absolute; top:10px; right:10px; display:flex; gap:8px;
    pointer-events:auto; /* clickable */
  }
  .menu-buttons button {
    background:#ffd166; color:black; border:none; padding:6px 10px; border-radius:8px;
    cursor:pointer; font-weight:bold;
    pointer-events:auto;
  }

  /* Panel Container */
  .panel {
    position:absolute; top:50%; left:50%; transform:translate(-50%,-50%);
    background:#16261a; border:2px solid #ffd166; border-radius:12px;
    padding:20px; display:none; width:360px; max-width:90%;
    pointer-events:auto; /* clickable */
    box-shadow:0 0 25px rgba(0,0,0,0.7);
  }
  .panel h2 {margin-top:0; color:#ffd166;}
  .close-btn {
    background:#ff6b6b; color:white; border:none; padding:6px 12px; border-radius:6px;
    cursor:pointer; font-weight:bold; margin-top:10px;
  }

  /* Quest + Simdex styling */
  .quest, .simdex-entry {
    margin:8px 0; background:#0e1610; padding:8px; border-radius:6px;
    border:1px solid #ffd166;
  }
  .quest button, .simdex-entry button {
    margin-top:6px; width:100%; background:#ffd166; border:none;
    padding:6px; cursor:pointer; border-radius:6px;
  }
</style>
</head>
<body>
<canvas id="gameCanvas" width="800" height="600"></canvas>

<!-- UI -->
<div id="ui">
  <div class="coins">Coins: <span id="coinCount">0</span></div>
  <div class="menu-buttons">
    <button onclick="openPanel('settingsPanel')">‚öôÔ∏è</button>
    <button onclick="openPanel('shopPanel')">üõí</button>
    <button onclick="openPanel('questPanel')">üìú</button>
  </div>

  <!-- Settings -->
  <div id="settingsPanel" class="panel">
    <h2>Settings</h2>
    <button onclick="alert('Music toggled!')">Toggle Music</button>
    <button class="close-btn" onclick="closePanels()">Close</button>
  </div>

  <!-- Shop -->
  <div id="shopPanel" class="panel">
    <h2>Marketplace</h2>
    <p>Select a Simitaur to heal (cost <b>5 coins</b>):</p>
    <div id="simdexList"></div>
    <button class="close-btn" onclick="closePanels()">Close</button>
  </div>

  <!-- Quests -->
  <div id="questPanel" class="panel">
    <h2>Quests</h2>
    <div id="quests"></div>
    <hr>
    <p><b>Test Controls:</b></p>
    <button onclick="catchSimitaur(false)">Catch Normal Simitaur</button>
    <button onclick="catchSimitaur(true)">Catch Exotic Simitaur</button>
    <button onclick="updateCoins(10)">+10 Coins</button>
    <br><br>
    <button class="close-btn" onclick="closePanels()">Close</button>
  </div>
</div>

<script>
let coins = 20; // start with coins for testing
let simitaursCaught = 0;
let exoticsCaught = 0;

// Fake Simdex for demo
let simdex = [
  {id:1, name:"Leafhorn", hp:20, maxHp:50},
  {id:2, name:"Flametail", hp:45, maxHp:45},
  {id:3, name:"Crystalwing", hp:10, maxHp:60}
];

let quests = [
  {id:1, text:"Catch 5 Simitaurs (Reward: 50 coins)", goal:5, progress:0, reward:50, type:"simitaur", completed:false},
  {id:2, text:"Catch 1 Exotic Simitaur (Reward: 100 coins)", goal:1, progress:0, reward:100, type:"exotic", completed:false}
];

function updateCoins(amount){
  coins += amount;
  document.getElementById("coinCount").innerText = coins;
}

function openPanel(id){
  closePanels();
  const panel=document.getElementById(id);
  panel.style.display="block";
  if(id==="shopPanel") renderSimdex();
  if(id==="questPanel") renderQuests();
}

function closePanels(){
  document.querySelectorAll(".panel").forEach(p=>p.style.display="none");
}

function renderQuests(){
  const qDiv=document.getElementById("quests");
  qDiv.innerHTML="";
  quests.forEach(q=>{
    let div=document.createElement("div");
    div.className="quest";
    div.innerHTML=`<b>${q.text}</b><br>
    Progress: ${q.progress}/${q.goal}<br>`;
    if(!q.completed && q.progress>=q.goal){
      let btn=document.createElement("button");
      btn.textContent="Claim Reward";
      btn.onclick=()=>{
        updateCoins(q.reward);
        q.completed=true;
        renderQuests();
      };
      div.appendChild(btn);
    } else if(q.completed){
      div.innerHTML += `<i>Completed ‚úÖ</i>`;
    }
    qDiv.appendChild(div);
  });
}

function catchSimitaur(isExotic=false){
  if(isExotic){
    exoticsCaught++;
    let quest = quests.find(q=>q.type==="exotic");
    if(quest) quest.progress=exoticsCaught;
  } else {
    simitaursCaught++;
    let quest = quests.find(q=>q.type==="simitaur");
    if(quest) quest.progress=simitaursCaught;
  }
  renderQuests();
}

function renderSimdex(){
  const sDiv=document.getElementById("simdexList");
  sDiv.innerHTML="";
  simdex.forEach(creature=>{
    let div=document.createElement("div");
    div.className="simdex-entry";
    div.innerHTML=`<b>${creature.name}</b><br>
      HP: ${creature.hp}/${creature.maxHp}<br>`;
    let btn=document.createElement("button");
    btn.textContent="Heal (5 coins)";
    btn.onclick=()=>healCreature(creature);
    div.appendChild(btn);
    sDiv.appendChild(div);
  });
}

function healCreature(creature){
  if(creature.hp>=creature.maxHp){
    alert(`${creature.name} is already at full health!`);
    return;
  }
  if(coins>=5){
    coins-=5;
    creature.hp=creature.maxHp;
    updateCoins(0);
    renderSimdex();
  } else {
    alert("Not enough coins!");
  }
}

// Initialize
updateCoins(0);
renderQuests();
</script>
</body>
</html>
